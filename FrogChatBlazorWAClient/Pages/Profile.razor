@page "/profile"
@using FrogChatModel.DTOModel;
@using FrogChatService;
@using System.Security.Claims;
@using ViewModel;
@inject HttpClient Http
@inject IUserService userService
@inject IProfileViewModel profileViewModel

<PageTitle>Profile</PageTitle>

<div class="col-12">
    <input type="text" @bind-value="@profileViewModel.UserId" class="form-control" placeholder="User id" disabled />
    <br />
    <input type="text" @bind-value="@profileViewModel.UserName" class="form-control" placeholder="User Name" disabled />
    <br />
    <input type="text" @bind-value="@profileViewModel.Name" class="form-control" placeholder="full name" />
    <br />
    <input type="text" @bind-value="@profileViewModel.EmailAddress" class="form-control" placeholder="email address" disabled />
    <br />
    <button class="btn btn-primary" @onclick="@profileViewModel.UpdateProfile">Update Profile</button>
    <button class="btn btn-primary" @onclick="profileViewModel.GetProfile">Get Profile</button>
    <br />
    <span> @profileViewModel.profileServiceStatus</span>
    <br />
    <AuthorizeView>
        <Authorized>
            @context.User.Identity.Name;
            
            Email  : @QueryIdentity.GetClaimValue(context.User,ClaimTypes.Email);

            Name : @QueryIdentity.GetClaimValue(context.User,ClaimTypes.Name);

            Picture : @QueryIdentity.GetClaimValue(context.User,"picture");
            <table>
                @foreach (var claim in context.User.Claims.ToList())
                {
                    <tr>
                        <td>@claim.Type</td>
                        <td>@claim.Value</td>
                    </tr>
                }
            </table>


        </Authorized>
    </AuthorizeView>
</div>


@code {

    protected override async Task OnInitializedAsync() { await profileViewModel.GetProfile(); }
}
